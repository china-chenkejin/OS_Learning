参考资料：
https://www.cnblogs.com/luwei0915/articles/10576186.html 
https://www.zhihu.com/question/25532384?sort=created

进程（process）常常被定义为程序的执行，可以看成是一个独立的程序,在内存中有其完备的数据空间和代码空间。一个进程所拥有的数据和变量只属于它自己。

线程（tread）可以说是轻量级的进程，或是某一进程中一路单独运行的程序。一个进程由一个或多个线程构成,各线程共享相同的代码和全局数据,但各有其自己的堆栈。由于堆栈是每个线程一个,所以局部变量对每一线程来说是私有的。由于所有线程共享同样的代码和全局数据,它们比进程更紧密,比单独的进程间更趋向于相互作用,线程间的相互作用更容易些,因为它们本身就有某些供通信用的共享内存：进程的全局数据。

（1）一个进程和一个线程最显著的区别是：线程有自己的全局数据。线程存在于进程中,因此一个进程的全局变量由所有的线程共享。由于线程共享同样的系统区域,操作系统分配给一个进程的资源对该进程的所有线程都是可用的,正如全局数据可供所有线程使用一样
个人理解就是分配的系统资源上的差异。

（2）通常来说进场是资源分配的基本单位，又是系统并发调度运行的基本单位。而在采用微内核结构的OS中，如MAC、winNT、RTOS中，进程一般只是资源分配的单位，真正实现并发调度运行的基本单位是线程

（3）线程的优势：易于调度；提高并发性，进程可创建多个线程来执行同一程序的不同部分；开销少；充分发挥多处理器的功能，通过创建多线程进程（即一个进程可具有两个或更多个线程），每个线程在一个处理器上运行，从而实现应用程序的并发性，使每个处理器都得到充分运行。

 任务（task）：是一个抽象的概念，就是指由软件完成的一个活动。一个任务既可以是一个进程,也可以是一个线程。简而言之,它指的是一系列共同达到某一目的的操作。例如,读取数据并将数据放入内存中。这个任务可以作为一个进程来实现,也可以作为一个线程（或作为一个中断任务）来实现。
